<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <provider name="MicrosoftSqlServer">
    <type name="BIT" />
    <type name="INT" />
    <type name="SMALLINT" />
    <type name="BIGINT" />
    <type name="UNIQUEIDENTIFIER" />
    <type name="CHAR" size="required" />
    <type name="NCHAR" size="required" />
    <type name="VARCHAR" size="maximum"/>
    <type name="NVARCHAR" size="maximum"/>
    <type name="DATE" />
    <type name="DATETIME" />
    <type name="DATETIME2" />
    <type name="XML" />

    <command name="GetTables">
      <![CDATA[
        SELECT [TABLE_CATALOG], [TABLE_SCHEMA], [TABLE_NAME] FROM [INFORMATION_SCHEMA].[TABLES] WHERE [TABLE_TYPE] = 'BASE TABLE'
      ]]>
    </command>
    <command name="GetColumns">
      <![CDATA[
        SELECT 
				  T.[TABLE_TYPE],
			      C.[TABLE_SCHEMA], 
			      C.[TABLE_NAME], 
			      C.[COLUMN_NAME], 
			      C.[COLUMN_DEFAULT], 
			      C.[IS_NULLABLE], 
			      C.[DATA_TYPE], 
			      C.[CHARACTER_MAXIMUM_LENGTH], 
			      C.[NUMERIC_PRECISION], 
			      C.[NUMERIC_SCALE]
	              FROM [INFORMATION_SCHEMA].[COLUMNS] C
			      INNER JOIN [INFORMATION_SCHEMA].[TABLES] T ON (T.TABLE_SCHEMA=C.TABLE_SCHEMA) AND (T.TABLE_NAME = C.TABLE_NAME) AND (T.[TABLE_TYPE] = 'BASE TABLE')
	              ORDER BY C.[TABLE_SCHEMA], C.[TABLE_NAME], C.[ORDINAL_POSITION]
      ]]>
    </command>
    <command name="GetPrimaryKeys">
      <![CDATA[
        SELECT U.[TABLE_SCHEMA], U.[TABLE_NAME], U.[CONSTRAINT_SCHEMA], U.[CONSTRAINT_NAME], U.[COLUMN_NAME]
	        FROM [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] U
	        INNER JOIN [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] C ON (C.[CONSTRAINT_NAME] = U.[CONSTRAINT_NAME]) AND C.[CONSTRAINT_SCHEMA] = U.[CONSTRAINT_SCHEMA]
	        WHERE C.[CONSTRAINT_TYPE]='PRIMARY KEY'
	        ORDER BY U.[TABLE_SCHEMA], U.[TABLE_NAME], U.[ORDINAL_POSITION]
      ]]>
    </command>
    <command name="GetForeignKeys">
      <![CDATA[
        SELECT 
	        C.[TABLE_SCHEMA] FK_TABLE_SCHEMA,
	        C.[TABLE_NAME] FK_TABLE_NAME,
	        C.[CONSTRAINT_SCHEMA],
	        C.[CONSTRAINT_NAME],
	        FK.[COLUMN_NAME] FK_COLUMN_NAME,
	        PK.[TABLE_SCHEMA] PK_TABLE_SCHEMA,
	        PK.[TABLE_NAME] PK_TABLE_NAME,
	        PK.[COLUMN_NAME] PK_COLUMN_NAME
	        FROM [INFORMATION_SCHEMA].[REFERENTIAL_CONSTRAINTS] R
	        INNER JOIN [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] C ON (R.[CONSTRAINT_SCHEMA] = C.[CONSTRAINT_SCHEMA]) AND (R.[CONSTRAINT_NAME] = C.[CONSTRAINT_NAME])
	        INNER JOIN [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] FK ON (FK.[CONSTRAINT_SCHEMA] = R.[CONSTRAINT_SCHEMA]) AND (FK.CONSTRAINT_NAME = R.[CONSTRAINT_NAME])
	        INNER JOIN [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] PK ON (PK.[CONSTRAINT_SCHEMA] = R.[UNIQUE_CONSTRAINT_SCHEMA]) AND (PK.CONSTRAINT_NAME = R.[UNIQUE_CONSTRAINT_NAME])
	        WHERE C.[CONSTRAINT_TYPE]='FOREIGN KEY'
	        ORDER BY C.[TABLE_SCHEMA], C.[TABLE_NAME]
      ]]>
    </command>
    <command name="GetRoutines">
      <![CDATA[
        SELECT 
	        [ROUTINE_SCHEMA], 
	        [ROUTINE_NAME], 
	        [ROUTINE_TYPE], 
	        [ROUTINE_DEFINITION], 
	        [DATA_TYPE] ,
	        [CHARACTER_MAXIMUM_LENGTH],
	        [NUMERIC_PRECISION],
	        [NUMERIC_SCALE]
	        FROM [INFORMATION_SCHEMA].[ROUTINES] 
      ]]>
    </command>
    <command name="GetRoutineParameters">
      <![CDATA[
        SELECT 
	        [SPECIFIC_SCHEMA] [ROUTINE_SCHEMA],
	        [SPECIFIC_NAME] [ROUTINE_NAME],
	        [PARAMETER_NAME],
	        [PARAMETER_MODE],
          [DATA_TYPE],
	        [CHARACTER_MAXIMUM_LENGTH],
	        [NUMERIC_PRECISION],
	        [NUMERIC_SCALE]
	        FROM [INFORMATION_SCHEMA].[PARAMETERS]
        WHERE ([PARAMETER_NAME] IS NOT NULL) AND (LEN([PARAMETER_NAME])>0)
        ORDER BY [SPECIFIC_SCHEMA], [SPECIFIC_NAME], [ORDINAL_POSITION]
      ]]>
    </command>
    <command name="GetIndexes">
      <![CDATA[
        SELECT  OBJECT_SCHEMA_NAME(ind.object_id) AS SchemaName
              , OBJECT_NAME(ind.object_id) AS TableName
              , ind.name AS IndexName
              , ind.is_primary_key AS IsPrimaryKey
              , ind.is_unique AS IsUniqueIndex
              , col.name AS ColumnName
              , ic.is_included_column AS IsIncludedColumn
              , ic.key_ordinal AS ColumnOrder
        FROM    sys.indexes ind
                INNER JOIN sys.index_columns ic
                    ON ind.object_id = ic.object_id
                       AND ind.index_id = ic.index_id
                INNER JOIN sys.columns col
                    ON ic.object_id = col.object_id
                       AND ic.column_id = col.column_id
                INNER JOIN sys.tables t
                    ON ind.object_id = t.object_id
        WHERE   t.is_ms_shipped = 0
        ORDER BY OBJECT_SCHEMA_NAME(ind.object_id) --SchemaName
              , OBJECT_NAME(ind.object_id) --ObjectName
              , ind.is_primary_key DESC
              , ind.is_unique DESC
              , ind.name --IndexName
              , ic.key_ordinal      
      ]]>
    </command>
    <command name="GetReferences">
      <![CDATA[
        SELECT DISTINCT
	        SCHEMA_NAME(REF.SCHEMA_ID) AS REFERENCE_ENTITY_SCHEMA,
	        REF.[NAME] AS REFERENCE_ENTITY_NAME,
	        REF.[TYPE] AS REFERENCE_ENTITY_TYPE,
	        SCHEMA_NAME(REFBY.SCHEMA_ID) AS REFERENCEDBY_ENTITY_SCHEMA,
	        REFBY.[NAME] AS REFERENCEDBY_ENTITY_NAME,
	        REFBY.[TYPE] AS REFERENCEDBY_ENTITY_TYPE
	        FROM SYSDEPENDS DEP
	        INNER JOIN SYS.OBJECTS REF ON REF.[OBJECT_ID] = DEP.[DEPID]
	        INNER JOIN SYS.OBJECTS REFBY ON REFBY.[OBJECT_ID] = DEP.[ID]
	        ORDER BY REFERENCE_ENTITY_TYPE, REFERENCE_ENTITY_SCHEMA, REFERENCE_ENTITY_NAME
      ]]>
    </command>
    <command name="GetViews">
      <![CDATA[
        SELECT 
				  T.[TABLE_TYPE],
			      C.[TABLE_SCHEMA], 
			      C.[TABLE_NAME], 
			      C.[COLUMN_NAME], 
			      C.[COLUMN_DEFAULT], 
			      C.[IS_NULLABLE], 
			      C.[DATA_TYPE], 
			      C.[CHARACTER_MAXIMUM_LENGTH], 
			      C.[NUMERIC_PRECISION], 
			      C.[NUMERIC_SCALE]
	              FROM [INFORMATION_SCHEMA].[COLUMNS] C
			      INNER JOIN [INFORMATION_SCHEMA].[TABLES] T ON (T.TABLE_SCHEMA=C.TABLE_SCHEMA) AND (T.TABLE_NAME = C.TABLE_NAME) AND (T.[TABLE_TYPE] = 'VIEW')
	              ORDER BY C.[TABLE_SCHEMA], C.[TABLE_NAME], C.[ORDINAL_POSITION]
      ]]>
    </command>
    <command name="GetViewColumnUsage">
      <![CDATA[
        SELECT [VIEW_SCHEMA], [VIEW_NAME],[TABLE_SCHEMA],[TABLE_NAME], [COLUMN_NAME]
	        FROM [INFORMATION_SCHEMA].[VIEW_COLUMN_USAGE]
	        ORDER BY [VIEW_SCHEMA], [VIEW_NAME], [TABLE_SCHEMA], [TABLE_NAME], [COLUMN_NAME]
      ]]>
    </command>
  </provider>
</configuration>